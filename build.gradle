/*
 * Copyright 2018 Karakun AG.
 * Copyright 2015-2018 Canoo Engineering AG.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }

    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
        classpath 'com.adarshr:gradle-test-logger-plugin:1.1.2'
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:4.5.4'
    }
}

subprojects { proj ->
    apply plugin: 'idea'
    apply plugin: 'java'
    apply plugin: 'com.adarshr.test-logger'

    proj.tasks.withType(JavaCompile) {
        sourceCompatibility = proj.sourceCompatibility
        targetCompatibility = proj.targetCompatibility
    }

    test.useTestNG()

    javadoc {
        options.addStringOption('Xdoclint:none', '-quiet')
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }

    repositories {
        jcenter()
        mavenLocal()
    }

    dependencies {
        testCompile "org.testng:testng:$testngVersion"
        testCompile "org.hamcrest:java-hamcrest:$hamcrestVersion"
        testCompile "org.jmockit:jmockit:$jmockitVersion"
    }

    jar.finalizedBy sourcesJar
    jar.finalizedBy javadocJar

    if(proj.publishJars.toBoolean()) {
        apply plugin: 'maven-publish'
        apply plugin: 'com.jfrog.bintray'
        apply plugin: 'com.jfrog.artifactory'

        publishing {
            publications {
                mavenCustom(MavenPublication) {
                    from components.java
                    artifact sourcesJar
                    artifact javadocJar
                }
            }
        }

        bintray {
            user = project.bintrayUsername
            key = project.bintrayApiKey
            publications = ['mavenCustom']
            pkg {
                repo = 'Rico'
                name = 'Rico'
                userOrg = 'karakun'
                licenses = ['Apache-2.0']
                vcsUrl = 'https://github.com/rico-project/rico.git'
            }
        }

        artifactory {
            contextUrl = 'https://oss.jfrog.org'
            publish {
                repository {
                    repoKey = 'oss-snapshot-local'
                    username = project.bintrayUsername
                    password = project.bintrayApiKey

                }
                defaults{
                    publications('mavenCustom')
                }
            }
        }
    }
}
