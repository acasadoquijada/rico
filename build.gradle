/*
 * Copyright 2018-2019 Karakun AG.
 * Copyright 2015-2018 Canoo Engineering AG.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
}

subprojects { proj ->
    apply plugin: 'idea'
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'

    proj.tasks.withType(JavaCompile) {
        sourceCompatibility = proj.sourceCompatibility
        targetCompatibility = proj.targetCompatibility

        //options.compilerArgs << '-Xlint:deprecation'
        //options.compilerArgs << '-Xlint:unchecked'
    }

    publishing {
        publications {
            mavenCustom(MavenPublication) {
                from components.java
            }
        }
    }

    test.useTestNG()

    javadoc {
        options.addStringOption('encoding', 'UTF-8')
        options.addStringOption('Xdoclint:none', '-quiet')
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }

    repositories {
        jcenter()
        mavenLocal()
    }

    dependencies {
        implementation "org.slf4j:slf4j-api:$slf4jVersion"
        implementation "org.apiguardian:apiguardian-api:$apiguardianVersion"

        testImplementation "org.testng:testng:$testngVersion"
        testImplementation "org.hamcrest:java-hamcrest:$hamcrestVersion"
        testImplementation "org.jmockit:jmockit:$jmockitVersion"
        testRuntime "org.slf4j:slf4j-simple:$slf4jVersion"
    }
    
    jar.finalizedBy sourcesJar
    jar.finalizedBy javadocJar
}
